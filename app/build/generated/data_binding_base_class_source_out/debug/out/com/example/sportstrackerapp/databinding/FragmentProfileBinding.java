// Generated by view binder compiler. Do not edit!
package com.example.sportstrackerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sportstrackerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonLogin;

  @NonNull
  public final Button buttonSignup;

  @NonNull
  public final EditText editPassword;

  @NonNull
  public final EditText editUsername;

  @NonNull
  public final LinearLayout fragmentProfile;

  private FragmentProfileBinding(@NonNull LinearLayout rootView, @NonNull Button buttonLogin,
      @NonNull Button buttonSignup, @NonNull EditText editPassword, @NonNull EditText editUsername,
      @NonNull LinearLayout fragmentProfile) {
    this.rootView = rootView;
    this.buttonLogin = buttonLogin;
    this.buttonSignup = buttonSignup;
    this.editPassword = editPassword;
    this.editUsername = editUsername;
    this.fragmentProfile = fragmentProfile;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_login;
      Button buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.button_signup;
      Button buttonSignup = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignup == null) {
        break missingId;
      }

      id = R.id.edit_password;
      EditText editPassword = ViewBindings.findChildViewById(rootView, id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.edit_username;
      EditText editUsername = ViewBindings.findChildViewById(rootView, id);
      if (editUsername == null) {
        break missingId;
      }

      LinearLayout fragmentProfile = (LinearLayout) rootView;

      return new FragmentProfileBinding((LinearLayout) rootView, buttonLogin, buttonSignup,
          editPassword, editUsername, fragmentProfile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
