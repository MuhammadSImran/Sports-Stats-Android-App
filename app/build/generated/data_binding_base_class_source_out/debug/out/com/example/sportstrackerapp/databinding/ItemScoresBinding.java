// Generated by view binder compiler. Do not edit!
package com.example.sportstrackerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sportstrackerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScoresBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView awayTeamLabel;

  @NonNull
  public final ImageView awayTeamLogo;

  @NonNull
  public final TextView awayTeamScore;

  @NonNull
  public final TextView gameDate;

  @NonNull
  public final TextView gameTime;

  @NonNull
  public final TextView homeTeamLabel;

  @NonNull
  public final ImageView homeTeamLogo;

  @NonNull
  public final TextView homeTeamScore;

  private ItemScoresBinding(@NonNull LinearLayout rootView, @NonNull TextView awayTeamLabel,
      @NonNull ImageView awayTeamLogo, @NonNull TextView awayTeamScore, @NonNull TextView gameDate,
      @NonNull TextView gameTime, @NonNull TextView homeTeamLabel, @NonNull ImageView homeTeamLogo,
      @NonNull TextView homeTeamScore) {
    this.rootView = rootView;
    this.awayTeamLabel = awayTeamLabel;
    this.awayTeamLogo = awayTeamLogo;
    this.awayTeamScore = awayTeamScore;
    this.gameDate = gameDate;
    this.gameTime = gameTime;
    this.homeTeamLabel = homeTeamLabel;
    this.homeTeamLogo = homeTeamLogo;
    this.homeTeamScore = homeTeamScore;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScoresBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScoresBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_scores, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScoresBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.awayTeamLabel;
      TextView awayTeamLabel = ViewBindings.findChildViewById(rootView, id);
      if (awayTeamLabel == null) {
        break missingId;
      }

      id = R.id.awayTeamLogo;
      ImageView awayTeamLogo = ViewBindings.findChildViewById(rootView, id);
      if (awayTeamLogo == null) {
        break missingId;
      }

      id = R.id.awayTeamScore;
      TextView awayTeamScore = ViewBindings.findChildViewById(rootView, id);
      if (awayTeamScore == null) {
        break missingId;
      }

      id = R.id.gameDate;
      TextView gameDate = ViewBindings.findChildViewById(rootView, id);
      if (gameDate == null) {
        break missingId;
      }

      id = R.id.gameTime;
      TextView gameTime = ViewBindings.findChildViewById(rootView, id);
      if (gameTime == null) {
        break missingId;
      }

      id = R.id.homeTeamLabel;
      TextView homeTeamLabel = ViewBindings.findChildViewById(rootView, id);
      if (homeTeamLabel == null) {
        break missingId;
      }

      id = R.id.homeTeamLogo;
      ImageView homeTeamLogo = ViewBindings.findChildViewById(rootView, id);
      if (homeTeamLogo == null) {
        break missingId;
      }

      id = R.id.homeTeamScore;
      TextView homeTeamScore = ViewBindings.findChildViewById(rootView, id);
      if (homeTeamScore == null) {
        break missingId;
      }

      return new ItemScoresBinding((LinearLayout) rootView, awayTeamLabel, awayTeamLogo,
          awayTeamScore, gameDate, gameTime, homeTeamLabel, homeTeamLogo, homeTeamScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
